[package]
name = "windows_tts_engine_piper_dll"
edition = "2021"
version.workspace = true
authors.workspace = true
repository.workspace = true
license.workspace = true
description = "A DLL that is a COM server and offers a text-to-speech engine for Windows that utilizes piper neural network models"

[lib]
# https://stackoverflow.com/questions/75279682/implementing-a-windows-credential-provider
name = "windows_tts_engine_piper"
crate-type = ["cdylib"]

[features]
default = ["direct_output"]

direct_output = ["dep:rodio"]


[dependencies]
windows_tts_engine = { path = "../windows_tts_engine" } # We moved a lot of logic into this crate

log = { workspace = true, features = [
    "release_max_level_off",
] } # Disable any logging in release mode

serde = "1"
serde_json = "1" # Load piper JSON configs
piper-rs = "0.1" # Use piper TTS models in Rust (MIT) (but depends on eSpeak-ng so parts are likely GPLv3, https://github.com/lucasjinreal/Kokoros/issues/13)
rodio = { version = "0.20", optional = true }   # Audio playback library

[dependencies.windows]
workspace = true
features = [
    "Win32_Foundation",      # For MAX_PATH and S_OK
    "Win32_System_Ole",      # For SELFREG_E_CLASS
    "Win32_System_Registry", # For RegCreateKeyExW
    "Win32_Security",        # For RegCreateKeyExW
    "Win32_Media_Speech",    # For ISpTTSEngineSite
]

[build-dependencies]
winresource = { workspace = true }

[package]
name = "windows_tts_engine_piper_dll"
edition = "2021"
version.workspace = true
authors.workspace = true
repository.workspace = true
license.workspace = true
description = "A DLL that is a COM server and offers a text-to-speech engine for Windows that utilizes piper neural network models"

[lib]
# https://stackoverflow.com/questions/75279682/implementing-a-windows-credential-provider
name = "windows_tts_engine_piper"
crate-type = ["cdylib"]

[features]
default = ["direct_output"]

# Optionally output directly to audio device (simpler but not how SAPI is expected to work):
direct_output = ["dep:rodio"]

# Use the Lingua crate for language detection.
lingua = ["windows_tts_engine/lingua"]

# Disable any logging in release mode
disable_logging_in_release = [
    "windows_tts_engine/disable_logging_in_release",
    "log/release_max_level_off",
]

# Support 32bit builds: https://docs.rs/ort/1.16.3/ort/#how-to-get-binaries
ort_load_dynamic = ["ort/load-dynamic"]


[dependencies]
windows_tts_engine = { path = "../windows_tts_engine" } # We moved a lot of logic into this crate
log = { workspace = true } # Disable any logging in release mode
serde = "1"
serde_json = "1" # Load piper JSON configs
piper-rs = "0.1" # Use piper TTS models in Rust (MIT) (but depends on eSpeak-ng so parts are likely GPLv3, https://github.com/lucasjinreal/Kokoros/issues/13)
rodio = { version = "0.20", optional = true }   # Audio playback library

ort = { version = "2.0.0-rc.9" } # AI runtime used by piper-rs (keep version in sync)

[dependencies.windows]
workspace = true
features = [
    "Win32_Foundation",      # For MAX_PATH and S_OK
    "Win32_System_Ole",      # For SELFREG_E_CLASS
    "Win32_System_Registry", # For RegCreateKeyExW
    "Win32_Security",        # For RegCreateKeyExW
    "Win32_Media_Speech",    # For ISpTTSEngineSite
]

[build-dependencies]
winresource = { workspace = true }
